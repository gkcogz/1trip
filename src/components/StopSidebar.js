import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Field, EmojiButton } from './ui';
import { useI18n } from '../i18n';
export default function StopSidebar({ trip, selectedStopId, setSelectedStopId, addActivity, setActivityField, deleteActivity, setStopField, }) {
    const { t } = useI18n();
    const stop = trip.stops.find((s) => s.id === selectedStopId);
    return (_jsxs(_Fragment, { children: [stop && (_jsx("div", { className: "fixed inset-0 bg-black/40 backdrop-blur-[2px] z-40", onClick: () => setSelectedStopId(null) })), _jsxs("div", { className: `fixed inset-y-0 right-0 w-[420px] max-w-[90vw] bg-white border-l border-[var(--color-border)] shadow-2xl transition-transform duration-300 z-50 ${stop ? 'translate-x-0' : 'translate-x-full'}`, children: [_jsxs("div", { className: "p-4 flex items-center justify-between border-b border-[var(--color-border)]", children: [_jsx("div", { className: "font-semibold text-[var(--color-brand)]", children: t('sidebar.title') }), _jsx(EmojiButton, { emoji: "\u2716\uFE0F", label: t('common.close'), title: t('common.close'), onClick: () => setSelectedStopId(null), variant: "ghost" })] }), stop && (_jsxs("div", { className: "p-4 md:p-6 space-y-6 overflow-y-auto h-[calc(100%-56px)]", children: [_jsxs("div", { className: "space-y-1", children: [_jsx("div", { className: "text-sm text-[var(--color-muted)]", children: t('sidebar.selected') }), _jsx("div", { className: "text-lg font-semibold text-[var(--color-accent)]", children: stop.city || t('sidebar.untitled') })] }), _jsxs("section", { children: [_jsx("h4", { className: "font-semibold mb-2 text-[var(--color-brand)]", children: t('sidebar.activities') }), _jsxs("div", { className: "space-y-2", children: [stop.activities.length === 0 && (_jsx("div", { className: "text-sm text-[var(--color-muted)]", children: t('sidebar.none') })), stop.activities.map((a) => (_jsxs("div", { className: "rounded-xl border border-[var(--color-border)] p-3 bg-neutral-50 shadow-sm", children: [_jsx("input", { className: "w-full px-3 py-2 rounded-lg border border-[var(--color-border)] mb-2 bg-white", value: a.title, onChange: (e) => setActivityField(stop.id, a.id, 'title', e.target.value) }), _jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsxs("select", { className: "px-3 py-2 rounded-lg border border-[var(--color-border)] bg-white", value: a.category, onChange: (e) => setActivityField(stop.id, a.id, 'category', e.target.value), children: [_jsx("option", { value: "nature", children: t('sidebar.category.nature') }), _jsx("option", { value: "food", children: t('sidebar.category.food') }), _jsx("option", { value: "culture", children: t('sidebar.category.culture') }), _jsx("option", { value: "nightlife", children: t('sidebar.category.nightlife') }), _jsx("option", { value: "other", children: t('sidebar.category.other') })] }), _jsx("input", { className: "flex-1 px-3 py-2 rounded-lg border border-[var(--color-border)] bg-white", placeholder: t('sidebar.note'), value: a.note || '', onChange: (e) => setActivityField(stop.id, a.id, 'note', e.target.value) })] }), _jsxs("label", { className: "inline-flex items-center gap-2 px-2 py-2 rounded-lg border border-[var(--color-border)] bg-white", children: [_jsx("span", { children: t('sidebar.cost') }), _jsx("input", { type: "number", inputMode: "decimal", step: "any", min: 0, className: "w-28 bg-transparent outline-none", value: a.cost || 0, onFocus: (e) => e.currentTarget.select(), onChange: (e) => setActivityField(stop.id, a.id, 'cost', Number(e.target.value) || 0) })] }), _jsx(EmojiButton, { emoji: "\uD83D\uDDD1", label: t('sidebar.delete'), title: t('sidebar.delete'), onClick: () => deleteActivity(stop.id, a.id), variant: "btn", className: "ml-2 !bg-red-600 hover:!bg-red-700 border-red-600" })] }, a.id))), _jsx(EmojiButton, { emoji: "\u2795", label: t('sidebar.addActivity'), title: t('sidebar.addActivity'), onClick: () => addActivity(stop.id), variant: "btn" })] })] }), _jsxs("section", { className: "space-y-2", children: [_jsx("h4", { className: "font-semibold text-[var(--color-brand)]", children: t('sidebar.lodgingFoodOther') }), (() => {
                                        const nights = stop.stayNights || 0;
                                        const b = stop.budget || {};
                                        const lodgingTotal = typeof b.lodgingTotal === 'number'
                                            ? b.lodgingTotal
                                            : (b.lodgingPerNight || 0) * nights;
                                        return (_jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-3 gap-2", children: [_jsx(Field, { label: t('sidebar.lodgingTotal'), children: _jsx("input", { type: "number", inputMode: "decimal", step: "any", min: 0, className: "w-full px-3 py-2 rounded-lg border border-[var(--color-border)] bg-white", value: lodgingTotal, onFocus: (e) => e.currentTarget.select(), onChange: (e) => setStopField(stop.id, 'budget', {
                                                            ...b,
                                                            lodgingTotal: Number(e.target.value) || 0,
                                                        }) }) }), _jsx(Field, { label: t('sidebar.foodPerDay'), children: _jsx("input", { type: "number", inputMode: "decimal", step: "any", min: 0, className: "w-full px-3 py-2 rounded-lg border border-[var(--color-border)] bg-white", value: b.foodPerDay || 0, onFocus: (e) => e.currentTarget.select(), onChange: (e) => setStopField(stop.id, 'budget', {
                                                            ...b,
                                                            foodPerDay: Number(e.target.value) || 0,
                                                        }) }) }), _jsx(Field, { label: t('sidebar.otherTotal'), children: _jsx("input", { type: "number", inputMode: "decimal", step: "any", min: 0, className: "w-full px-3 py-2 rounded-lg border border-[var(--color-border)] bg-white", value: b.other || 0, onFocus: (e) => e.currentTarget.select(), onChange: (e) => setStopField(stop.id, 'budget', {
                                                            ...b,
                                                            other: Number(e.target.value) || 0,
                                                        }) }) })] }));
                                    })()] })] }))] })] }));
}
